/*******************************************************************************
 * This file is part of leon-wsn sources
 *
 * xxx @HIT 2010-5-15
 *
 * For other questions, you can contact the author.
 * email:hityixiaoyang@gmail.com
 * College of Software, Harbin Institute of Technology.
 *
 ******************************************************************************
 *
 * xiaoyang yi @2011.5.28 create
 * xiaoyang yi @2011.9.22 modify
 ******************************************************************************/

#ifndef INCLUDES_H_
#define INCLUDES_H_

/*c lib*/
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>

/*ecos lib*/
#include <cyg/kernel/kapi.h>

/*user's header*/
#include "types.h"
#include "spi.h"
#include "lemon.h"
#include "netif.h"
#include "gpio.h"
#include "rf.h"
#include "translate.h"
#include "adpcm.h"
#include "application.h"
#include "data.h"
#include "tools.h"
#include"ieee802_15_4.h"
#include"uz2400d.h"
#include "VS1003x.h"
#include "uart.h"

#include "ck_gen.h"
#include "i2cmst.h"

 /* attention
  * in the future, this file will be generated by some utility to help customize leon-wsn
  */

#define max(a,b) \
       ({ 	typeof (a) _a = (a); \
       	typeof (b) _b = (b); \
       	_a > _b ? _a : _b; })

#define min(a,b)  \
		({	typeof (a) _a	= (a);\
			typeof	(b)	_b = (b);\
			_a < _b ? _a :_b;})

/* a macro to enable the debug source code
 * for release version in global sources, you should undef this macro
 */
#ifndef DEBUG
	#define	_DEBUG_		1
#endif

#ifndef printk
	#define printk	printf
#endif

/*
#ifndef DPRINTF
	#define	DPRINTF	\
		if (_DEBUG_) \
			printf
#endif
*/

#if (PRINTF_DEBUG_MSG == NU_TRUE)
	#if (C99_SUPPORT == NU_TRUE)
		#define dprintf(...) _dprintf_(__VA_ARGS__)
		/* usage : printf_debug("%s.%d", "debug", 1); */
	#else
		#define dprintf(args) (_dprintf_ args)
		/* usage : printf_debug(("%s.%d", "debug", 1)); (Note : Double parentheses)*/
	#endif
#else
	#define dprintf(...)
#endif

/*
 * byte order,depend on by the specal machine
 */
#ifndef BIG_ENDIEND
#define BIG_ENDIEND		0
#endif

#ifndef LITTLEENDIAN
#define LITTLEENDIAN	1
#endif

#ifndef BYTE_ORDER
#define BYTE_ORDER		LITTLEENDIAN
#endif

/*
 * version definition
 */
#define SOFT_VERSION	0x08	/*v0.8*/

#endif /* INCLUDES_H_ */
